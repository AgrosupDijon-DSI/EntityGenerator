<?php
{% spaceless %}
{% set useDoctrineArrayCollection = "" %}
{% for relationship in currentEntity.relationshipList %}
    {% if ((relationship.cardinality == "manyToOne") or (relationship.cardinality == "oneToMany") or (relationship.cardinality == "manyToMany") or (relationship.cardinality == "ownerManyToMany")) %}
        {# if entityOwner id is the same of the entity id #}
        {% if not relationship.entityOwner == currentEntity.id %}
            {% set useDoctrineArrayCollection = "use Doctrine\\Common\\Collections\\ArrayCollection;" %}
        {% endif %}
    {% endif %}
{% endfor %}

namespace {{namespace}}Entity;

use Doctrine\ORM\Mapping as ORM;
{{useDoctrineArrayCollection}}
/**
 * @ORM\Entity
 * @ORM\Entity(repositoryClass="{{namespace}}EntityRepository\{{currentEntity.name|entityName}}Repository")
 * @ORM\Table(name="{{currentEntity.name}}")
 */
class {{currentEntity.name|entityName}}
{
{% endspaceless %}
{% set functions = "" %}
{% if currentEntity.isThisEntityATernaryRelationshipBetweenManyEntity() == false %}
{% for attribute in currentEntity.attributeList %}
{% if attribute.isForeignKey == false %}
    {% include 'property.php.twig' with {'attributeName':attribute.name|formatAttributeName,
                                         'attributeType':attribute.type,
                                         'attributePrecision':attribute.precision,
                                         'attributeLength':attribute.length,
                                         'attributeCardinality':null} %}

{% set functionsTmp  %}
    {% include 'functions.php.twig' with {'attributeName':attribute.name|formatAttributeName,
                                         'attributeType':attribute.type,
                                         'attributeCardinality':null} %}
{% endset %}
{% set functions = functions ~ functionsTmp %}

{% endif %} {# attribute.isForeignKey == false #}
{% endfor %} {# attribute #}
{% endif %} 
{% for relationship in currentEntity.relationshipList %}
{% spaceless %}
    {% set relationshipCardinality = relationship.cardinality %}
    {% if relationship.entityOwner == currentEntity.id %}
        {% set targetEntity = entityList.getEntityById(relationship.entityInRelationship) %}
    {% else %}

        {% set targetEntity = entityList.getEntityById(relationship.entityOwner) %}

    {% endif %}

    {# checks whether the entity is a targetEntity association, in the case of an association ManyToMany #}
    {% if targetEntity.isARelationManyToManyBetweenTwoEntity() == true %}
        {# Check who is the owner of the association #}
        {% set ownerIdEntity = entityList.whoIsTheOwner(targetEntity) %}
        {% set relationShipEntity = targetEntity %}

        {% if ownerIdEntity == currentEntity.id %}
            {% set relationshipCardinality = "ownerManyToMany" %}
            {% set targetEntity = entityList.getEntityById(targetEntity.getTheOtherPartOfTheRelationship(ownerIdEntity)) %}
        {% else %}
            {% set relationshipCardinality = "manyToMany" %}
            {% set targetEntity = entityList.getEntityById(ownerIdEntity) %}
        {% endif %}
    {% endif %}
{% endspaceless %}

    {% include 'property.php.twig' with {'attributeName':targetEntity.name|formatAttributeName,
                                             'attributeType':null,
                                             'attributePrecision':null,
                                             'attributeLength':null,
                                             'attributeCardinality':relationshipCardinality,
                                             'currentEntity': currentEntity,
                                             'targetEntity': targetEntity,
                                             'relationShipEntity': relationShipEntity|default(null) } %}

{% set functionsTmp  %}
    {% include 'functions.php.twig' with {'attributeName':targetEntity.name|formatAttributeName,
                                         'attributeType':null,
                                         'attributeCardinality':relationshipCardinality} %}
{% endset %}
{% set functions = functions ~ functionsTmp %}

{% endfor %} {# relationship in entity.relationshipList #}


{{ functions|raw }}

}