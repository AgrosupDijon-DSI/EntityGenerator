{% macro getFunctionGet(attribute, attributeType, attributeName) %}
    /**
     * @return {{ attributeType|getReturnTypeOfAttribute }} ${{ attributeName }} {{attribute.comment|raw|replace({"\n" : "\n     *   "})}}
     */
    public function {{ attributeName|functionName('get') }}()
    {
        return $this->{{ attributeName }};
    }
{% endmacro getFunctionGet %}
{% macro getFunctionSet(currentEntity, attribute, attributeType, attributeName, attributeTypeForCast) %}
{% if attributeTypeForCast == null %}
{% set attributeTypeForCast = getObjectForThisAttributeType(attributeType) %}
{% endif %}
/**
     * @param {{attributeType|getReturnTypeOfAttribute}} ${{ attributeName }} {{attribute.comment|raw|replace({"\n" : "\n     *   "})}}
     * @return {{currentEntity.name|entityName}}
     */
    public function {{ attributeName|functionName('set') }}({% if attributeTypeForCast %}{{ attributeTypeForCast }} {% endif %}${{ attributeName }})
    {
        $this->{{ attributeName }} = ${{ attributeName }};
        return $this;
    }
{% endmacro getFunctionSet %}
{% set attributeTypeForCast = null %}
{% if attributeCardinality == "manyToOne" %}
{% set attributeType = targetEntity.name|entityName %}
{% set attributeTypeForCast = targetEntity.name|entityName %}
{% endif %}
{% if attributeCardinality == "manyToMany" or attributeCardinality == "ownerManyToMany" or attributeCardinality == "oneToMany" %}
{% if attributeCardinality == "manyToMany" or attributeCardinality == "ownerManyToMany" %}
{% set attributeName = attributeName ~ "List" %}
{% endif %}
{% set targetEntityName = targetEntity.name|entityName %}
{% set attributeType = "ArrayCollection" %}
/**
     * @param {{ targetEntityName }} ${{ attributeName }}
     * @return {{ currentEntity.name|entityName }}
     */
    public function add{{ targetEntityName }}({{ targetEntityName }} ${{ targetEntity.name|formatAttributeName }})
    {
        // if the object isn't in the list
        if(!$this->{{ attributeName }}{% if attributeCardinality == "oneToMany" %}List{% endif %}->contains(${{ targetEntity.name|formatAttributeName }})) {
            
            $this->{{ attributeName }}{% if attributeCardinality == "oneToMany" %}List{% endif %}->add(${{ targetEntity.name|formatAttributeName }});

{% if attributeCardinality != "oneToMany" %}
            if (!${{ targetEntity.name|formatAttributeName }}->get{{currentEntity.name|entityName}}List()->contains($this)) {
                ${{ targetEntity.name|formatAttributeName }}->add{{currentEntity.name|entityName}}($this);
            }
{% else %}
            ${{ targetEntity.name|formatAttributeName }}->{{currentEntity.name|functionName('set')}}($this);
{% endif %}
        }
    }

    /**
     * @param Mix (Collection/{{ targetEntityName }}) $items
     * @return {{ currentEntity.name|entityName }}
     */
    public function {{ attributeName|functionName('set') }}($items)
    {
        if ($items instanceof Collection) {
            foreach ($items as $item) {
                if(!$this->{{ attributeName }}->contains($item)) {
                    $this->{{ attributeName }}{% if attributeCardinality == "oneToMany" %}List{% endif %}->add($item);
                }
            }
        } elseif ($items instanceof {{ targetEntityName }}) {
            $this->add{{ targetEntityName }}($items);
        } else {
            throw new \Exception('$items must be an instance of {{ targetEntityName }} or Collection');
        }
        return $this;
    }

{{ _self.getFunctionGet(attribute, attributeType, (targetEntityName ~ "List")|formatAttributeName ) }}

{% else %}
{% if attributeCardinality == "ownerOneToOne" or attributeCardinality == "oneToOne" %}
{% set attributeType = targetEntity.name|entityName %}
/**
     * @param {{ targetEntity.name|entityName }} ${{ targetEntity.name|formatAttributeName }}
     * @return {{ currentEntity.name|entityName }}
     */
    public function {{ targetEntity.name|functionName('set') }}({{ targetEntity.name|entityName }} ${{ targetEntity.name|formatAttributeName }})
    {
        $this->{{ attributeName }} = ${{ targetEntity.name|formatAttributeName }};

         if ($this->{{ attributeName }}->{{ currentEntity.name|functionName('get') }}() !== $this) {
            $this->{{ attributeName }}->{{ currentEntity.name|functionName('set') }}($this);
        }
        return $this;
    }
    
{% else %}
{{ _self.getFunctionSet(currentEntity, attribute, attributeType, attributeName, attributeTypeForCast) }}
{% endif %}
{{ _self.getFunctionGet(attribute, attributeType, attributeName) }}
{% if attributeType == "boolean" and needIsOrHasFunction(attributeName) %}
/**
     * @return {{ attributeType|getReturnTypeOfAttribute }} ${{ attributeName }} {{attribute.comment|raw|replace({"\n" : "\n     *   "})}}
     */
    public function {{ attributeName }}()
    {
        return (boolean)$this->{{ attributeName }};
    }
    
{% endif %}
{% endif %}